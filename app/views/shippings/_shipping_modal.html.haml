
#ShippingStatusModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "basicModal", role: "dialog", tabindex: "-1"}
  .modal-dialog
    = simple_form_for(:import, url: "/shippings/#{@import.id}/update", html: { class: 'form-horizontal'}, remote: true, defaults: {input_html: {class: 'form-control'}}) do |f|
      .modal-content
        .modal-header
          = link_to 'Ã—', 'javascript:void(0)', class: 'close', data: {dismiss: 'modal'}, aria: {labelledby: 'close'}
          %h1.modal-title Update Shipping Status
        .modal-body
          .form-group
            .col-md-4
              = label_tag 'Original BL Received', nil, class: "form-check-label"
            .col-md-2.pad1
              %input{:type => "checkbox", :checked => @import.bl_received_at.present?, 
                :class => "shipping_checkbox form-check-input", "data-column" => "bl_received_at",
                "data-eta" => "eta"}
            .col-md-4
              %input{:type => "text", :name => "import[bl_received_at]", :class => "form-control #{@import.bl_received_at.present? ? "" : "hidden"} bl_received_at",
                :value => @import.bl_received_at.try(:to_date).try(:to_formatted_s)}
          .form-group
            .col-md-4
              = label_tag 'Charges Received', nil, class: "form-check-label"
            .col-md-2.pad1
              %input{:type => "checkbox", :checked => @import.charges_received_at.present?, 
                :class => "shipping_checkbox form-check-input", "data-column" => "charges_received_at"}
            .col-md-4
              %input{:type => "text", :name => "import[charges_received_at]", :class => "form-control #{@import.charges_received_at.present? ? "" : "hidden"} charges_received_at",
                :value => @import.charges_received_at.try(:to_date).try(:to_formatted_s)}
          .form-group
            .col-md-4
              = label_tag 'Charges Paid', nil, class: "form-check-label"
            .col-md-2.pad1
              %input{:type => "checkbox", :checked => @import.charges_paid_at.present?, 
                :class => "shipping_checkbox form-check-input", "data-column" => "charges_paid_at"}
            .col-md-4
              %input{:type => "text", :name => "import[charges_paid_at]", :class => "form-control #{@import.charges_paid_at.present? ? "" : "hidden"} charges_paid_at",
                :value => @import.charges_paid_at.try(:to_date).try(:to_formatted_s)}
          .form-group
            .col-md-4
              = label_tag 'Delivery Order Received', nil, class: "form-check-label"
            .col-md-2.pad1
              %input{:type => "checkbox", :checked => @import.do_received_at.present?, 
                :class => "shipping_checkbox form-check-input", "data-column" => "do_received_at"}
            .col-md-4
              %input{:type => "text", :name => "import[do_received_at]", :class => "form-control #{@import.do_received_at.present? ? "" : "hidden"} do_received_at",
                :value => @import.do_received_at.try(:to_date).try(:to_formatted_s)}
          .form-group
            .col-md-4
              = label_tag 'Packing List Received', nil, class: "form-check-label"
            .col-md-2.pad1
              %input{:type => "checkbox", :checked => @import.pl_received_at.present?, 
                :class => "shipping_checkbox form-check-input", "data-column" => "pl_received_at"}
            .col-md-4
              %input{:type => "text", :name => "import[pl_received_at]", :class => "form-control #{@import.pl_received_at.present? ? "" : "hidden"} pl_received_at",
                :value => @import.pl_received_at.try(:to_date).try(:to_formatted_s)}
          .form-group.do-extra_field
            %hr
            .col-md-4
              = label_tag 'Container Return Location', nil, class: "form-check-label"
            .col-md-4
              %input{:type => "text", :name => "import[return_location]",
                :class => "form-control return_location",
                :value => @import.return_location}
          .form-group.do-extra_field
            .col-md-4
              = label_tag 'GF Return Date', nil, class: "form-check-label"
            .col-md-4
              %input{:type => "text", :name => "import[gf_return_date]",
                :class => "form-control gf_return_date",
                :value => @import.gf_return_date.try(:to_date).try(:to_formatted_s)}
          =f.hidden_field :late_submission, :value => false
        .modal-footer
          = link_to 'Cancel', 'javascript:void(0)', class: 'btn btn-primary', data: {dismiss: 'modal'}
          = f.submit 'Save', class: 'btn btn-primary', "data-disable-with" => "saving..."

:coffeescript
  $('#ShippingStatusModal').on 'shown.bs.modal', (event) ->
    bl_date = new Date("#{@import.bl_received_at.present? ? @import.bl_received_at.to_date.try(:to_formatted_s) : Date.today.to_date.try(:to_formatted_s)}")
    cr_date = new Date("#{@import.charges_received_at.present? ? @import.charges_received_at.to_date.to_formatted_s : Date.today.to_date.to_formatted_s }")
    cp_date = new Date("#{@import.charges_paid_at.present? ? @import.charges_paid_at.to_date.to_formatted_s : Date.today.to_date.to_formatted_s }")
    do_date = new Date("#{@import.do_received_at.present? ? @import.do_received_at.to_date.to_formatted_s : Date.today.to_date.to_formatted_s }")
    pl_date = new Date("#{@import.pl_received_at.present? ? @import.pl_received_at.to_date.to_formatted_s : Date.today.to_date.to_formatted_s }")
    initDatePicker(bl_date, "bl_received_at")
    initDatePicker(cr_date, "charges_received_at")
    initDatePicker(cp_date, "charges_paid_at")
    initDatePicker(do_date, "do_received_at")
    initDatePicker(pl_date, "pl_received_at")
    if "#{@import.do_received_at.present?}" == "true"
      $(".do-extra_field").show()
      initDatePicker(do_date, "gf_return_date")
    else
      $(".do-extra_field").hide()


  $('#statusModal').on 'hide.bs.modal', (event) ->
    $("#imports_table tr td.updateStatus .updateStatus").show()

  $('.shipping_checkbox').on 'change', (event) ->
    columnName = event.target.getAttribute("data-column")
    checked = event.target.checked
    if checked
      $("."+columnName).show().removeClass("hidden")
      if columnName == "do_received_at"
        $(".do-extra_field").show()
        initDatePicker(new Date("#{Date.today.to_formatted_s}"), "gf_return_date")
    else
      $("."+columnName).hide().val("")
      if columnName == "do_received_at"
        $(".do-extra_field").hide()
        $(".gf_return_date, .return_location").val("")

  initDatePicker =(date, columnName) ->
    $("."+columnName).datepicker({
      format: "yyyy/mm/dd",
      startDate: '-1y',
      defaultViewDate: date,
    }).on 'changeDate', (event) ->
      if event.currentTarget.className.includes("bl_received_at") && event.date > new Date("#{@import.estimate_arrival.try(:to_formatted_s)}")
        confirmAns = confirm("Is this late submission of Document?")
        if confirmAns
          $("#import_late_submission").val(true)
        else
          $("#import_late_submission").val(false)
      else
        $("#import_late_submission").val(false)
