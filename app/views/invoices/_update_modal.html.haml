= simple_nested_form_for(invoice, url: url, html: { class: 'form-horizontal', id: 'invoice_form', method: method }, remote: true, defaults: {input_html: {class: 'form-control'}}) do |f|
  .modal-content
    .modal-header
      = link_to 'Ã—', 'javascript:void(0)', class: 'close', data: {dismiss: 'modal'}, aria: {labelledby: 'close'}
      - if invoice.is_additional_invoice
        %h1.modal-title Additional Invoice
      - else
        %h1.modal-title Update Invoice

    .modal-body
      .row.col-md-12
        .col-md-3
          .panel.panel-warning
            .panel-heading
              #customer_name
                %label Customer Name: #{invoice.customer_name}
              #invoiced_date
                %label Invoiced Date: #{invoice.formatted_date}
              #invoice_quantity
                %label Equipment: #{invoice.equipment_type} X #{invoice.total_containers}

              - if (invoice.is_TBL_export_invoice? || invoice.is_Haulage_export_invoice?)
                %label Port of Discharge: #{invoice.destination}

              - if invoice.is_additional_invoice
                #prev_inv_number
                  %label Previous Invoice: #{invoice.previous_invoice.number}/ #{invoice.previous_invoice.amount}
              - else
                #invoice_rate
                  %label Rate Agreed: #{invoice.rate_agreed}

        .col-md-3
          - unless invoice.bl_number.blank?
            .panel.panel-warning
              .panel-heading
                %label BL Number: #{invoice.bl_number}
                %label Shipping Line Charges: #{invoice.invoiceable.try(:shipping_line_charges)}
                %label Ocean Freight: #{invoice.invoiceable.try(:payment_ocean)}
                %label Port Charges: #{invoice.invoiceable.try(:payment_clearing)}
                %label Port Storage: #{invoice.invoiceable.try(:cheque_clearing)}
        .col-md-6
          #invoice_amount
            =f.input :amount, input_html: {style: "color:red;"}
          %br
          = f.input :remarks, as: :text
          = f.input :date, as: :string, label: 'Invoice Date', input_html: {id: 'inv_date', class: 'form-control', value: f.object.date.try(:strftime, "%d-%m-%Y")}
      .row.col-md-12
        .col-md-6
          #invoice_number
            =f.input :number, input_html: {:"data-validation" => "required", :"data-validation-error-msg" => "Please Enter Number"}
        .col-md-6
          #document_number
            = f.input :document_number
      .row.col-md-12
        .panel.panel-default
          .panel-heading
            .panel-title
              .col-md-3
                Particular
              .col-md-3
                Rate
              .col-md-2
                Quantity
              .col-md-3
                Subtotal
              
            .row.col-md-12#particulars

              = f.fields_for :particulars do |particular|
                .row.nested_row
                  .col-md-3.myselect
                    - if (!particular.object.name.blank? && !(INVOICE_PARTICULARS.include?(particular.object.name)))
                      = particular.text_field :name, class: "form-control", "data-validation" => "required", "data-validation-error-msg"=> "Please Select One"
                    -else
                      = particular.select :name, INVOICE_PARTICULARS.map{|i| [i,i]}, {include_blank: "Select particular"}, required: true, class: "myselect form-control", class: 'form-control', "data-validation" => "required", "data-validation-error-msg"=> "Please Select One"
                  .col-md-3
                    = particular.text_field :rate, class: 'rate form-control', "data-validation" => " number required", "data-validation-error-msg"=> "Please Enter Valid Rate"
                  .col-md-2
                    = particular.text_field :quantity, class: "quantity form-control", "data-validation" => " number required", "data-validation-allowing"=>"range[0;#{invoice.total_containers}]", "data-validation-error-msg"=> "Please Enter Positive Quantity less than #{invoice.total_containers}"
                  .col-md-3
                    = particular.text_field :subtotal, readonly: "readonly", class: "subtotal form-control"
                  .col-md-1
                    = particular.link_to_remove class: "btn btn-danger btn-sm" do
                      %span.glyphicon.glyphicon-remove

            = f.link_to_add :particulars, :data => { :target => "#particulars"}, class: "btn btn-success" do
              %span.glyphicon.glyphicon-plus Add



      = link_to 'Cancel', 'javascript:void(0)', class: 'btn btn-primary', data: {dismiss: 'modal'}
      = f.submit 'Save', class: 'btn btn-primary', "data-disable-with" => "saving..."

:coffeescript

$(document).on "page:load ready", ->
  $('#inv_date').datepicker
    endDate: '+0d'
    format: 'dd-mm-yyyy'
