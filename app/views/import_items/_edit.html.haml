- status = []
- status << [@import_item.status.titleize, @import_item.status]
- if @import_item.status == 'under_loading_process'
  - status << ['Allocated Truck', @import_item.aasm.events.join]
- else
  - status << [@import_item.aasm.events.join.titleize, @import_item.aasm.events.join]
= simple_form_for @import_item, url: updateStatus_import_item_path(@import_item), method: :post, html: { class: 'form-horizontal status_form'}, remote: true do |f|
  .modal-content
    .modal-header
      = link_to 'Ã—', 'javascript:void(0)', class: 'close', data: {dismiss: 'modal'}, aria: {labelledby: 'close'}
      %h1.modal-title Update Status
      %hr
      .modal-body
        #truck_number
        = f.input :status, collection: status, :input_html => {:class => 'select required form-control text-capitalize'}
        - readonly = ['loaded_out_of_port', 'arrived_at_border', 'departed_from_border', 'arrived_at_destination'].include?(@import_item.status)
        -if is_rfs_host? || is_ug_host? || Rails.env.development?
          .co-loaded.form-group
            .col-md-3
              = f.label :is_co_loaded, "Is Co-loaded?"
            .col-md-6
              = f.check_box :is_co_loaded
          .free-trucks
            = f.input :truck_id, collection: reallocate_truck_numbers[:free], include_blank: true, label: 'Truck'
            = f.input :truck_number, label: 'Truck Number', input_html: {class: "import_item_truck_number form-control"}
          .allotted-trucks
            = f.input :truck_id, collection: reallocate_truck_numbers[:alloted], include_blank: true, label: 'Alloted Truck', input_html: { id: "allotted_trucks"}
            .import_item_truck_number
              = f.input :truck_number, collection: reallocate_truck_numbers[:third_party_allotted_trucks], label: 'Allotted Trucks', input_html: {class: "import_item_truck_number11", id: "allotted_truck_numbers"}

          = f.input :last_loading_date, as: :string, input_html: { class: "form-control last_loading_date", value: f.object.last_loading_date.try(:strftime, "%Y-%m-%d") }, label: "Last Loading date"

          - if @import_item.under_loading_process?
            %hr
            = f.input :next_truck_id, collection: reallocate_truck_numbers[:available_next], include_blank: true, input_html: { id: "next_truck_id" }
            = f.input :tentative_truck_allocation, as: :string, input_html: { class: "form-control tentative_truck_allocation", value: f.object.tentative_truck_allocation.try(:strftime, "%Y-%m-%d") || Date.today }, label: "Tentative Allocation"

          .custom-entry-released
            %hr
            .form-group
              .col-md-3
                = f.label :exit_note_received, "Exit Note Received?"
              .col-md-6
                = f.check_box :exit_note_received, :class => "form-check-input exit-note-received"
            = f.input :expiry_date, as: :string, input_html: { class: "form-control expiry_date custom-entry-released", value: f.object.expiry_date.try(:strftime, "%Y-%m-%d") }, label: "Expiry Date" if @import_item.import.entry_type == "wt8"
          .return_status_field
            = f.input :return_status, collection: ImportItem.return_statuses.keys, :input_html => {:class => 'select required form-control text-capitalize'}
          .dropped_location_field
            = f.input :dropped_location, as: :string, :input_html => {:class => "form-control text-capitalize dropped_location"}

      .modal-footer
        = link_to 'Cancel', 'javascript:void(0)', class: 'btn btn-primary', data: {dismiss: 'modal'}
        = f.submit 'Save', class: 'btn btn-primary', "data-disable-with" => "saving..."

:coffeescript
  $('#import_item_truck_id, #allotted_trucks, #allotted_truck_numbers, #next_truck_id').select2({allowClear: true, placeholder: "Select an truck"});
  $('#import_item_last_loading_date, #import_item_tentative_truck_allocation').datepicker({ format: 'yyyy/mm/dd' });
  $('#import_item_expiry_date').datepicker({ format: 'yyyy/mm/dd' });
  import_item = #{@import_item.to_json}
  if $("#import_item_status").val() == "under_loading_process"
    $(".custom-entry-released").hide()
  $('#statusModal').on 'show.bs.modal', (event) ->
    if $("#import_item_is_co_loaded").is(":checked")
      $(".free-trucks").hide().find('*').attr('disabled', true);
      $(".allotted-trucks").show().find('*').attr('disabled', false);
    else
      $(".free-trucks").show().find('*').attr('disabled', false);
      $(".allotted-trucks").hide().find('*').attr('disabled', true);
    if #{@import_item.truck_number.present?}
      toggleTruckNumber(true)
    else
      toggleTruckNumber(false)
    
    $('#import_item_remarks').val('')
    if #{@import_item.status == "delivered"}
      $("#edit_import_item_#{@import_item.id} :input").prop("disabled", true);
      $(".return_status_field").show()
      if #{@import_item.return_status == "Dropped at Customer"}
        $(".dropped_location_field").show()
      else
        $(".dropped_location_field").hide()
    else
      $(".return_status_field").hide()
      $(".dropped_location_field").hide()

  $("#import_item_truck_id, #allotted_trucks").on 'change', (event) ->
    if event.added
      if event.added.text.toLowerCase().includes("3rd party truck")
        $("#import_item_truck_number").removeAttr("disabled")
        toggleTruckNumber(true)
      else
        $("#import_item_truck_number").val("")
        toggleTruckNumber(false)
    else
      toggleTruckNumber(true)

  $("#import_item_status").on 'change', (event) ->
    if event.target.selectedOptions[0].value == "truck_released"
      $(".return_status_field").show()
    if event.target.selectedOptions[0].value == "loaded_out_of_port"
      isPreviousMonthEntry()

  $("#import_item_return_status").on 'change', (event) ->
    if event.target.selectedOptions[0].value == "Dropped at Customer"
      $(".dropped_location_field").show()

  $("#import_item_is_co_loaded").on 'change', (event) ->
    # following if is for clearing the values of trucks and allotted trucks
    # when switched the coloaded checkbox
    if ("#{@import_item.is_co_loaded}" == "true")
      $("#import_item_truck_id").val(null).trigger("change")
    else
      $("#allotted_trucks").val(null).trigger("change")
    # following if is for hide/show free trucks and allotted trucks
    # As we have two different divs for allotted nd free trucks
    if $("#import_item_is_co_loaded").is(":checked")
      $(".free-trucks").hide().find('*').attr('disabled', true);
      $(".allotted-trucks").show().find('*').attr('disabled', false);
    else
      $(".free-trucks").show().find('*').attr('disabled', false);
      $(".allotted-trucks").hide().find('*').attr('disabled', true);
    toggleTruckNumber($("#allotted_trucks").val() =="0")

  toggleTruckNumber = (flag) -> 
    if flag
      $(".import_item_truck_number").show().children("input select").prop("disabled", false)
    else
      $(".import_item_truck_number").hide().children("input select").prop("disabled", true)

  isPreviousMonthEntry = () ->
    d= new Date().getDate()
    if d < 5
      ans = confirm("Should we consider this as previous month trip?")
      if ans
        $('<input>').attr({
            type: 'hidden',
            id: 'import_item_previous_month_entry',
            name: 'import_item[previous_month_entry]',
            value: "1"
        }).appendTo('.status_form');
      else
        $("#import_item_previous_month_entry").remove()

